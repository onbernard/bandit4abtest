% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/policy_exp3.R
\name{policy_exp3}
\alias{policy_exp3}
\title{EXP3 algorithm}
\usage{
policy_exp3(visitor_reward, gamma = 0.05)
}
\arguments{
\item{visitor_reward}{Dataframe of numeric values}

\item{gamma}{Numeric value (optional)}
}
\value{
\itemize{ List of elements :
 \item S         : numeric matrix of UCB parameters
 \item choice    : numeric vector of arm choice history
 \item proba     : numeric vector of max UCB history
 \item time      : total computation time
 \item theta_hat : estimated reward expectations
 \item theta     : real reward expectations
 \item weight    : weight coefficient of each arm
 }
}
\description{
Exponential  Weights  for  Exploration  and  Exploitation (EXP3)
 bandit strategy. Uses a list of weights which evolve according to arm's
 reward. The gamma parameter is a coefficient for balancing between
 exploitation and exploration.

 Control data in visitor_reward with \code{\link{bandit_reward_control}} and
 \code{\link{control_binary}}.

 Generates a matrix to save the results (S).
 \itemize{ At each iteration
 \item Update weight parameter for each arm
 \item Chooses randomly an arm according to the distribution of proba
 \item Receives a reward in visitor_reward for the arm and associated
 iteration
 \item Updates the means and trial matrix S. }

 Returns the choice and probability history, computation time, estimated
 reward expectations, real reward expectations and weights.

 See also  \code{\link{condition_for_exp3}}, \code{\link{generate_matrix_S}},
 and \code{\link{play_arm}}.
}
\examples{
## Generates 1000 numbers from 2 uniform distributions
set.seed(4434)
K1 <- rbinom(1000, 1, 0.6)
K2 <- rbinom(1000, 1, 0.7)
## Define a dataframe of rewards
visitor_reward <- as.data.frame( cbind(K1,K2) )
EXP3_alloc <- policy_exp3(visitor_reward)
EXP3_alloc$S
EXP3_alloc$time
EXP3_alloc$theta
EXP3_alloc$theta_hat

}
